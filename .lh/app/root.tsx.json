{
    "sourceFile": "app/root.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1662605120786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1662606073949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import theme from './styles/theme'\r\n \r\n export const meta: MetaFunction = () => ({\r\n   charset: 'utf-8',\r\n-  title: 'Bahamas',\r\n+  title: 'Bahamas | Registro de membro',\r\n   viewport: 'width=device-width,initial-scale=1',\r\n });\r\n \r\n export let links: LinksFunction = () => {\r\n"
                },
                {
                    "date": 1662606079515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import theme from './styles/theme'\r\n \r\n export const meta: MetaFunction = () => ({\r\n   charset: 'utf-8',\r\n-  title: 'Bahamas | Registro de membro',\r\n+  title: 'Bahamas | Registro de Membro',\r\n   viewport: 'width=device-width,initial-scale=1',\r\n });\r\n \r\n export let links: LinksFunction = () => {\r\n"
                }
            ],
            "date": 1662605120786,
            "name": "Commit-0",
            "content": "import React, { useContext, useEffect } from 'react'\r\nimport { withEmotionCache } from '@emotion/react'\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from '@remix-run/react'\r\nimport type { MetaFunction, LinksFunction } from '@remix-run/node' // Depends on the runtime you choose\r\n\r\nimport { ServerStyleContext, ClientStyleContext } from './context'\r\nimport theme from './styles/theme'\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: 'utf-8',\r\n  title: 'Bahamas',\r\n  viewport: 'width=device-width,initial-scale=1',\r\n});\r\n\r\nexport let links: LinksFunction = () => {\r\n  return [\r\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\r\n    { rel: 'preconnect', href: 'https://fonts.gstatic.com' },\r\n    {\r\n      rel: 'stylesheet',\r\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap'\r\n    },\r\n  ]\r\n}\r\n\r\ninterface DocumentProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Document = withEmotionCache(\r\n  ({ children }: DocumentProps, emotionCache) => {\r\n    const serverStyleData = useContext(ServerStyleContext);\r\n    const clientStyleData = useContext(ClientStyleContext);\r\n\r\n    useEffect(() => {\r\n      emotionCache.sheet.container = document.head;\r\n      const tags = emotionCache.sheet.tags;\r\n      emotionCache.sheet.flush();\r\n      tags.forEach((tag) => {\r\n        (emotionCache.sheet as any)._insertTag(tag);\r\n      });\r\n      clientStyleData?.reset();\r\n    }, []);\r\n\r\n    return (\r\n      <html lang=\"en\">\r\n        <head>\r\n          <Meta />\r\n          <Links />\r\n          {serverStyleData?.map(({ key, ids, css }) => (\r\n            <style\r\n              key={key}\r\n              data-emotion={`${key} ${ids.join(' ')}`}\r\n              dangerouslySetInnerHTML={{ __html: css }}\r\n            />\r\n          ))}\r\n        </head>\r\n        <body>\r\n          {children}\r\n          <ScrollRestoration />\r\n          <Scripts />\r\n          <LiveReload />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n);\r\n\r\nexport default function App() {\r\n  return (\r\n    <Document>\r\n      <ChakraProvider theme={theme}>\r\n        <Outlet />\r\n      </ChakraProvider>\r\n    </Document>\r\n  )\r\n}"
        }
    ]
}